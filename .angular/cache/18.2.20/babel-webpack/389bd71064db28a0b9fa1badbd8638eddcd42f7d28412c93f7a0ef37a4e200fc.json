{"ast":null,"code":"import { signal } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class ToastService {\n  constructor() {\n    this.toasts = signal([]);\n  }\n  push(message) {\n    const id = Date.now();\n    this.toasts.mutate(arr => arr.push({\n      id,\n      message\n    }));\n    setTimeout(() => this.remove(id), 3000);\n  }\n  remove(id) {\n    this.toasts.set(this.toasts().filter(t => t.id !== id));\n  }\n  static {\n    this.ɵfac = function ToastService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || ToastService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: ToastService,\n      factory: ToastService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["signal","ToastService","constructor","toasts","push","message","id","Date","now","mutate","arr","setTimeout","remove","set","filter","t","factory","ɵfac","providedIn"],"sources":["/home/subramanyahegade/Downloads/task-dashboard/src/app/core/services/toast.service.ts"],"sourcesContent":["import { Injectable, signal } from '@angular/core';\nexport interface Toast { id:number; message:string; }\n@Injectable({providedIn:'root'})\nexport class ToastService {\n  public toasts = signal<Toast[]>([]);\n  push(message:string){ const id = Date.now(); this.toasts.mutate(arr=> arr.push({id,message})); setTimeout(()=> this.remove(id), 3000); }\n  remove(id:number){ this.toasts.set(this.toasts().filter(t=>t.id!==id)); }\n}\n"],"mappings":"AAAA,SAAqBA,MAAM,QAAQ,eAAe;;AAGlD,OAAM,MAAOC,YAAY;EADzBC,YAAA;IAES,KAAAC,MAAM,GAAGH,MAAM,CAAU,EAAE,CAAC;;EACnCI,IAAIA,CAACC,OAAc;IAAG,MAAMC,EAAE,GAAGC,IAAI,CAACC,GAAG,EAAE;IAAE,IAAI,CAACL,MAAM,CAACM,MAAM,CAACC,GAAG,IAAGA,GAAG,CAACN,IAAI,CAAC;MAACE,EAAE;MAACD;IAAO,CAAC,CAAC,CAAC;IAAEM,UAAU,CAAC,MAAK,IAAI,CAACC,MAAM,CAACN,EAAE,CAAC,EAAE,IAAI,CAAC;EAAE;EACvIM,MAAMA,CAACN,EAAS;IAAG,IAAI,CAACH,MAAM,CAACU,GAAG,CAAC,IAAI,CAACV,MAAM,EAAE,CAACW,MAAM,CAACC,CAAC,IAAEA,CAAC,CAACT,EAAE,KAAGA,EAAE,CAAC,CAAC;EAAE;;;uCAH7DL,YAAY;IAAA;EAAA;;;aAAZA,YAAY;MAAAe,OAAA,EAAZf,YAAY,CAAAgB,IAAA;MAAAC,UAAA,EADD;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}