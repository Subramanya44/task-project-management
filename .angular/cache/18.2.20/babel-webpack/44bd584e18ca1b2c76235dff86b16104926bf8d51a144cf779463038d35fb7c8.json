{"ast":null,"code":"import { catchError, throwError } from 'rxjs';\nimport { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr'; // Install with `npm install ngx-toastr`\nexport const httpErrorInterceptor = (req, next) => {\n  const router = inject(Router);\n  const toastr = inject(ToastrService);\n  return next(req).pipe(catchError(error => {\n    console.error('HTTP Error:', error);\n    // Handle based on status code\n    switch (error.status) {\n      case 0:\n        toastr.error('Unable to connect to the server. Please check your network.', 'Network Error');\n        break;\n      case 400:\n        toastr.warning(error.error?.message || 'Invalid request.', 'Bad Request');\n        break;\n      case 401:\n        toastr.error('Your session has expired. Please log in again.', 'Unauthorized');\n        localStorage.removeItem('token'); // remove token\n        router.navigate(['/login']);\n        break;\n      case 403:\n        toastr.error('You do not have permission to perform this action.', 'Forbidden');\n        break;\n      case 404:\n        toastr.warning('Requested resource not found.', 'Not Found');\n        break;\n      case 500:\n        toastr.error('Something went wrong on our side. Please try again later.', 'Server Error');\n        break;\n      default:\n        toastr.error(error.error?.message || 'An unknown error occurred.', 'Error');\n    }\n    return throwError(() => error);\n  }));\n};","map":{"version":3,"names":["catchError","throwError","inject","Router","ToastrService","httpErrorInterceptor","req","next","router","toastr","pipe","error","console","status","warning","message","localStorage","removeItem","navigate"],"sources":["/home/subramanyahegade/Downloads/task-dashboard/src/app/core/interceptors/http-error.interceptor.ts"],"sourcesContent":["import { HttpInterceptorFn } from '@angular/common/http';\nimport { catchError, throwError } from 'rxjs';\nimport { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { ToastrService } from 'ngx-toastr'; // Install with `npm install ngx-toastr`\n\nexport const httpErrorInterceptor: HttpInterceptorFn = (req, next) => {\n  const router = inject(Router);\n  const toastr = inject(ToastrService);\n\n  return next(req).pipe(\n    catchError(error => {\n      console.error('HTTP Error:', error);\n\n      // Handle based on status code\n      switch (error.status) {\n        case 0:\n          toastr.error('Unable to connect to the server. Please check your network.', 'Network Error');\n          break;\n        case 400:\n          toastr.warning(error.error?.message || 'Invalid request.', 'Bad Request');\n          break;\n        case 401:\n          toastr.error('Your session has expired. Please log in again.', 'Unauthorized');\n          localStorage.removeItem('token'); // remove token\n          router.navigate(['/login']);\n          break;\n        case 403:\n          toastr.error('You do not have permission to perform this action.', 'Forbidden');\n          break;\n        case 404:\n          toastr.warning('Requested resource not found.', 'Not Found');\n          break;\n        case 500:\n          toastr.error('Something went wrong on our side. Please try again later.', 'Server Error');\n          break;\n        default:\n          toastr.error(error.error?.message || 'An unknown error occurred.', 'Error');\n      }\n\n      return throwError(() => error);\n    })\n  );\n};\n"],"mappings":"AACA,SAASA,UAAU,EAAEC,UAAU,QAAQ,MAAM;AAC7C,SAASC,MAAM,QAAQ,eAAe;AACtC,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,aAAa,QAAQ,YAAY,CAAC,CAAC;AAE5C,OAAO,MAAMC,oBAAoB,GAAsBA,CAACC,GAAG,EAAEC,IAAI,KAAI;EACnE,MAAMC,MAAM,GAAGN,MAAM,CAACC,MAAM,CAAC;EAC7B,MAAMM,MAAM,GAAGP,MAAM,CAACE,aAAa,CAAC;EAEpC,OAAOG,IAAI,CAACD,GAAG,CAAC,CAACI,IAAI,CACnBV,UAAU,CAACW,KAAK,IAAG;IACjBC,OAAO,CAACD,KAAK,CAAC,aAAa,EAAEA,KAAK,CAAC;IAEnC;IACA,QAAQA,KAAK,CAACE,MAAM;MAClB,KAAK,CAAC;QACJJ,MAAM,CAACE,KAAK,CAAC,6DAA6D,EAAE,eAAe,CAAC;QAC5F;MACF,KAAK,GAAG;QACNF,MAAM,CAACK,OAAO,CAACH,KAAK,CAACA,KAAK,EAAEI,OAAO,IAAI,kBAAkB,EAAE,aAAa,CAAC;QACzE;MACF,KAAK,GAAG;QACNN,MAAM,CAACE,KAAK,CAAC,gDAAgD,EAAE,cAAc,CAAC;QAC9EK,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC,CAAC,CAAC;QAClCT,MAAM,CAACU,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;QAC3B;MACF,KAAK,GAAG;QACNT,MAAM,CAACE,KAAK,CAAC,oDAAoD,EAAE,WAAW,CAAC;QAC/E;MACF,KAAK,GAAG;QACNF,MAAM,CAACK,OAAO,CAAC,+BAA+B,EAAE,WAAW,CAAC;QAC5D;MACF,KAAK,GAAG;QACNL,MAAM,CAACE,KAAK,CAAC,2DAA2D,EAAE,cAAc,CAAC;QACzF;MACF;QACEF,MAAM,CAACE,KAAK,CAACA,KAAK,CAACA,KAAK,EAAEI,OAAO,IAAI,4BAA4B,EAAE,OAAO,CAAC;IAC/E;IAEA,OAAOd,UAAU,CAAC,MAAMU,KAAK,CAAC;EAChC,CAAC,CAAC,CACH;AACH,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}