{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { moveItemInArray, transferArrayItem, DragDropModule } from '@angular/cdk/drag-drop';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../../core/services/task.service\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"@angular/cdk/drag-drop\";\nfunction TaskBoardComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const t_r1 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(t_r1.title);\n  }\n}\nfunction TaskBoardComponent_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const t_r2 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(t_r2.title);\n  }\n}\nfunction TaskBoardComponent_div_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const t_r3 = ctx.$implicit;\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(t_r3.title);\n  }\n}\nexport class TaskBoardComponent {\n  constructor(ts) {\n    this.ts = ts;\n    this.todo = [];\n    this.inprogress = [];\n    this.done = [];\n    this.reload();\n  }\n  reload() {\n    const all = this.ts.tasks();\n    this.todo = all.filter(x => x.status === 'todo');\n    this.inprogress = all.filter(x => x.status === 'inprogress');\n    this.done = all.filter(x => x.status === 'done');\n  }\n  drop(e, status) {\n    if (e.previousContainer === e.container) moveItemInArray(e.container.data, e.previousIndex, e.currentIndex);else transferArrayItem(e.previousContainer.data, e.container.data, e.previousIndex, e.currentIndex);\n    // update statuses of items moved\n    e.container.data.forEach(t => {\n      t.status = status;\n      this.ts.update(t.id, {\n        status\n      });\n    });\n  }\n  static {\n    this.ɵfac = function TaskBoardComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TaskBoardComponent)(i0.ɵɵdirectiveInject(i1.TaskService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: TaskBoardComponent,\n      selectors: [[\"app-task-board\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 16,\n      vars: 6,\n      consts: [[1, \"grid\", \"grid-cols-3\", \"gap-4\"], [1, \"card\"], [1, \"font-bold\", \"mb-2\"], [\"cdkDropList\", \"\", 3, \"cdkDropListDropped\", \"cdkDropListData\"], [\"cdkDrag\", \"\", \"class\", \"p-2 border mb-2 rounded\", 4, \"ngFor\", \"ngForOf\"], [\"cdkDrag\", \"\", 1, \"p-2\", \"border\", \"mb-2\", \"rounded\"]],\n      template: function TaskBoardComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"h4\", 2);\n          i0.ɵɵtext(3, \"To Do\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"div\", 3);\n          i0.ɵɵlistener(\"cdkDropListDropped\", function TaskBoardComponent_Template_div_cdkDropListDropped_4_listener($event) {\n            return ctx.drop($event, \"todo\");\n          });\n          i0.ɵɵtemplate(5, TaskBoardComponent_div_5_Template, 2, 1, \"div\", 4);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(6, \"div\", 1)(7, \"h4\", 2);\n          i0.ɵɵtext(8, \"In Progress\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"div\", 3);\n          i0.ɵɵlistener(\"cdkDropListDropped\", function TaskBoardComponent_Template_div_cdkDropListDropped_9_listener($event) {\n            return ctx.drop($event, \"inprogress\");\n          });\n          i0.ɵɵtemplate(10, TaskBoardComponent_div_10_Template, 2, 1, \"div\", 4);\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"div\", 1)(12, \"h4\", 2);\n          i0.ɵɵtext(13, \"Done\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(14, \"div\", 3);\n          i0.ɵɵlistener(\"cdkDropListDropped\", function TaskBoardComponent_Template_div_cdkDropListDropped_14_listener($event) {\n            return ctx.drop($event, \"done\");\n          });\n          i0.ɵɵtemplate(15, TaskBoardComponent_div_15_Template, 2, 1, \"div\", 4);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"cdkDropListData\", ctx.todo);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.todo);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"cdkDropListData\", ctx.inprogress);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.inprogress);\n          i0.ɵɵadvance(4);\n          i0.ɵɵproperty(\"cdkDropListData\", ctx.done);\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngForOf\", ctx.done);\n        }\n      },\n      dependencies: [CommonModule, i2.NgForOf, DragDropModule, i3.CdkDropList, i3.CdkDrag],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","moveItemInArray","transferArrayItem","DragDropModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","t_r1","title","t_r2","t_r3","TaskBoardComponent","constructor","ts","todo","inprogress","done","reload","all","tasks","filter","x","status","drop","e","previousContainer","container","data","previousIndex","currentIndex","forEach","t","update","id","ɵɵdirectiveInject","i1","TaskService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","TaskBoardComponent_Template","rf","ctx","ɵɵlistener","TaskBoardComponent_Template_div_cdkDropListDropped_4_listener","$event","ɵɵtemplate","TaskBoardComponent_div_5_Template","TaskBoardComponent_Template_div_cdkDropListDropped_9_listener","TaskBoardComponent_div_10_Template","TaskBoardComponent_Template_div_cdkDropListDropped_14_listener","TaskBoardComponent_div_15_Template","ɵɵproperty","i2","NgForOf","i3","CdkDropList","CdkDrag","encapsulation"],"sources":["/home/subramanyahegade/Downloads/task-dashboard/src/app/features/tasks/task-board/task-board.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TaskService } from '../../../core/services/task.service';\nimport { CdkDragDrop, moveItemInArray, transferArrayItem, DragDropModule } from '@angular/cdk/drag-drop';\n\n@Component({\n  selector: 'app-task-board',\n  standalone: true,\n  imports: [CommonModule, DragDropModule],\n  template: `\n    <div class=\"grid grid-cols-3 gap-4\">\n      <div class=\"card\">\n        <h4 class=\"font-bold mb-2\">To Do</h4>\n        <div cdkDropList [cdkDropListData]=\"todo\" (cdkDropListDropped)=\"drop($event,'todo')\">\n          <div *ngFor=\"let t of todo\" cdkDrag class=\"p-2 border mb-2 rounded\">{{t.title}}</div>\n        </div>\n      </div>\n      <div class=\"card\">\n        <h4 class=\"font-bold mb-2\">In Progress</h4>\n        <div cdkDropList [cdkDropListData]=\"inprogress\" (cdkDropListDropped)=\"drop($event,'inprogress')\">\n          <div *ngFor=\"let t of inprogress\" cdkDrag class=\"p-2 border mb-2 rounded\">{{t.title}}</div>\n        </div>\n      </div>\n      <div class=\"card\">\n        <h4 class=\"font-bold mb-2\">Done</h4>\n        <div cdkDropList [cdkDropListData]=\"done\" (cdkDropListDropped)=\"drop($event,'done')\">\n          <div *ngFor=\"let t of done\" cdkDrag class=\"p-2 border mb-2 rounded\">{{t.title}}</div>\n        </div>\n      </div>\n    </div>\n  `\n})\nexport class TaskBoardComponent {\n  todo = []; inprogress = []; done = [];\n  constructor(private ts: TaskService){\n    this.reload();\n  }\n  reload(){ const all = this.ts.tasks(); this.todo = all.filter((x:any)=>x.status==='todo'); this.inprogress = all.filter((x:any)=>x.status==='inprogress'); this.done = all.filter((x:any)=>x.status==='done'); }\n  drop(e:CdkDragDrop<any[]>, status:string){\n    if(e.previousContainer === e.container) moveItemInArray(e.container.data, e.previousIndex, e.currentIndex);\n    else transferArrayItem(e.previousContainer.data, e.container.data, e.previousIndex, e.currentIndex);\n    // update statuses of items moved\n    e.container.data.forEach((t:any)=>{ t.status = status as 'todo' | 'inprogress' | 'done'; this.ts.update(t.id, {status}); });\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}