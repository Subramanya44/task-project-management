{"ast":null,"code":"var __decorate = this && this.__decorate || function (decorators, target, key, desc) {\n  var c = arguments.length,\n    r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,\n    d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterLink } from '@angular/router';\nlet DashboardComponent = class DashboardComponent {\n  constructor(ps, ts) {\n    this.projects = [];\n    this.tasks = [];\n    ps.list().subscribe(p => this.projects = p);\n    ts.listByProject(0).subscribe(all => this.tasks = ts.tasks());\n  }\n};\nDashboardComponent = __decorate([Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [CommonModule, RouterLink],\n  template: `\n    <div>\n      <div class=\"grid grid-cols-4 gap-4 mb-4\">\n        <div class=\"card\">Projects: {{projects.length}}</div>\n        <div class=\"card\">Tasks: {{tasks.length}}</div>\n        <div class=\"card\">Completed: {{tasks.filter(t=>t.status==='done').length}}</div>\n        <div class=\"card\">Pending: {{tasks.filter(t=>t.status!=='done').length}}</div>\n      </div>\n      <div>\n        <a routerLink=\"/projects\" class=\"px-3 py-1 border rounded\">Manage Projects</a>\n        <a routerLink=\"/tasks\" class=\"px-3 py-1 border rounded ml-2\">Task Board</a>\n      </div>\n    </div>\n  `\n})], DashboardComponent);\nexport { DashboardComponent };","map":{"version":3,"names":["Component","CommonModule","RouterLink","DashboardComponent","constructor","ps","ts","projects","tasks","list","subscribe","p","listByProject","all","__decorate","selector","standalone","imports","template"],"sources":["/home/subramanyahegade/Downloads/task-dashboard/src/app/features/dashboard/dashboard.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ProjectService } from '../../core/services/project.service';\nimport { TaskService } from '../../core/services/task.service';\nimport { RouterLink } from '@angular/router';\n\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [CommonModule, RouterLink],\n  template: `\n    <div>\n      <div class=\"grid grid-cols-4 gap-4 mb-4\">\n        <div class=\"card\">Projects: {{projects.length}}</div>\n        <div class=\"card\">Tasks: {{tasks.length}}</div>\n        <div class=\"card\">Completed: {{tasks.filter(t=>t.status==='done').length}}</div>\n        <div class=\"card\">Pending: {{tasks.filter(t=>t.status!=='done').length}}</div>\n      </div>\n      <div>\n        <a routerLink=\"/projects\" class=\"px-3 py-1 border rounded\">Manage Projects</a>\n        <a routerLink=\"/tasks\" class=\"px-3 py-1 border rounded ml-2\">Task Board</a>\n      </div>\n    </div>\n  `\n})\nexport class DashboardComponent {\n  projects = [];\n  tasks = [];\n  constructor(ps: ProjectService, ts: TaskService){\n    ps.list().subscribe(p => this.projects = p);\n    ts.listByProject(0).subscribe(all => this.tasks = ts.tasks());\n  }\n}\n"],"mappings":";;;;;;;AAAA,SAASA,SAAS,QAAQ,eAAe;AACzC,SAASC,YAAY,QAAQ,iBAAiB;AAG9C,SAASC,UAAU,QAAQ,iBAAiB;AAqBrC,IAAMC,kBAAkB,GAAxB,MAAMA,kBAAkB;EAG7BC,YAAYC,EAAkB,EAAEC,EAAe;IAF/C,KAAAC,QAAQ,GAAG,EAAE;IACb,KAAAC,KAAK,GAAG,EAAE;IAERH,EAAE,CAACI,IAAI,EAAE,CAACC,SAAS,CAACC,CAAC,IAAI,IAAI,CAACJ,QAAQ,GAAGI,CAAC,CAAC;IAC3CL,EAAE,CAACM,aAAa,CAAC,CAAC,CAAC,CAACF,SAAS,CAACG,GAAG,IAAI,IAAI,CAACL,KAAK,GAAGF,EAAE,CAACE,KAAK,EAAE,CAAC;EAC/D;CACD;AAPYL,kBAAkB,GAAAW,UAAA,EAnB9Bd,SAAS,CAAC;EACTe,QAAQ,EAAE,eAAe;EACzBC,UAAU,EAAE,IAAI;EAChBC,OAAO,EAAE,CAAChB,YAAY,EAAEC,UAAU,CAAC;EACnCgB,QAAQ,EAAE;;;;;;;;;;;;;;CAcX,CAAC,C,EACWf,kBAAkB,CAO9B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}