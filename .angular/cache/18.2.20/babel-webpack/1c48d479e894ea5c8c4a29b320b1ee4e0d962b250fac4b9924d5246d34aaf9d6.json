{"ast":null,"code":"// src/app/core/guards/auth.guard.ts\nimport { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nexport const authGuard = (route, state) => {\n  const auth = inject(AuthService);\n  const router = inject(Router);\n  const user = auth.currentUser();\n  const roles = route.data?.['roles'];\n  if (user) {\n    // If no roles specified, allow any authenticated user\n    if (!roles || roles.includes(user.role)) {\n      return true;\n    } else {\n      // Role not allowed → redirect\n      router.navigate(['/unauthorized']);\n      return false;\n    }\n  }\n  // Not logged in → go to login\n  router.navigate(['/auth/login']);\n  return false;\n};","map":{"version":3,"names":["inject","Router","AuthService","authGuard","route","state","auth","router","user","currentUser","roles","data","includes","role","navigate"],"sources":["/home/subramanyahegade/Downloads/task-dashboard/src/app/core/guards/auth.guard.ts"],"sourcesContent":["// src/app/core/guards/auth.guard.ts\nimport { inject } from '@angular/core';\nimport { CanActivateFn, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\nexport const authGuard: CanActivateFn = (route, state) => {\n  const auth = inject(AuthService);\n  const router = inject(Router);\n  const user = auth.currentUser();\n  const roles = route.data?.['roles'] as string[] | undefined;\n\n  if (user) {\n    // If no roles specified, allow any authenticated user\n    if (!roles || roles.includes(user.role)) {\n      return true;\n    } else {\n      // Role not allowed → redirect\n      router.navigate(['/unauthorized']);\n      return false;\n    }\n  }\n\n  // Not logged in → go to login\n  router.navigate(['/auth/login']);\n  return false;\n};\n"],"mappings":"AAAA;AACA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAAwBC,MAAM,QAAQ,iBAAiB;AACvD,SAASC,WAAW,QAAQ,0BAA0B;AAEtD,OAAO,MAAMC,SAAS,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACvD,MAAMC,IAAI,GAAGN,MAAM,CAACE,WAAW,CAAC;EAChC,MAAMK,MAAM,GAAGP,MAAM,CAACC,MAAM,CAAC;EAC7B,MAAMO,IAAI,GAAGF,IAAI,CAACG,WAAW,EAAE;EAC/B,MAAMC,KAAK,GAAGN,KAAK,CAACO,IAAI,GAAG,OAAO,CAAyB;EAE3D,IAAIH,IAAI,EAAE;IACR;IACA,IAAI,CAACE,KAAK,IAAIA,KAAK,CAACE,QAAQ,CAACJ,IAAI,CAACK,IAAI,CAAC,EAAE;MACvC,OAAO,IAAI;IACb,CAAC,MAAM;MACL;MACAN,MAAM,CAACO,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;MAClC,OAAO,KAAK;IACd;EACF;EAEA;EACAP,MAAM,CAACO,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;EAChC,OAAO,KAAK;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}