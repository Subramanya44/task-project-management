{"ast":null,"code":"import { signal } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport class LoaderService {\n  constructor() {\n    this.loading = signal(false);\n  }\n  show() {\n    this.loading.set(true);\n  }\n  hide() {\n    this.loading.set(false);\n  }\n  static {\n    this.ɵfac = function LoaderService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || LoaderService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: LoaderService,\n      factory: LoaderService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["signal","LoaderService","constructor","loading","show","set","hide","factory","ɵfac","providedIn"],"sources":["/home/subramanyahegade/Downloads/task-dashboard/src/app/core/services/loader.service.ts"],"sourcesContent":["import { Injectable, signal } from '@angular/core';\n@Injectable({ providedIn: 'root' })\nexport class LoaderService {\n  public loading = signal(false);\n  show() { this.loading.set(true); }\n  hide() { this.loading.set(false); }\n}\n"],"mappings":"AAAA,SAAqBA,MAAM,QAAQ,eAAe;;AAElD,OAAM,MAAOC,aAAa;EAD1BC,YAAA;IAES,KAAAC,OAAO,GAAGH,MAAM,CAAC,KAAK,CAAC;;EAC9BI,IAAIA,CAAA;IAAK,IAAI,CAACD,OAAO,CAACE,GAAG,CAAC,IAAI,CAAC;EAAE;EACjCC,IAAIA,CAAA;IAAK,IAAI,CAACH,OAAO,CAACE,GAAG,CAAC,KAAK,CAAC;EAAE;;;uCAHvBJ,aAAa;IAAA;EAAA;;;aAAbA,aAAa;MAAAM,OAAA,EAAbN,aAAa,CAAAO,IAAA;MAAAC,UAAA,EADA;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}