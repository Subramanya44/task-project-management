{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nexport const authGuard = (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n  const currentUser = authService.currentUser();\n  if (!currentUser) {\n    router.navigate(['/login']);\n    return false;\n  }\n  // Role check\n  const allowedRoles = route.data?.['roles'];\n  if (allowedRoles && !allowedRoles.includes(currentUser.role)) {\n    alert('Access denied: insufficient permissions.');\n    router.navigate(['/dashboard']);\n    return false;\n  }\n  return true;\n};","map":{"version":3,"names":["inject","Router","AuthService","authGuard","route","state","authService","router","currentUser","navigate","allowedRoles","data","includes","role","alert"],"sources":["/home/subramanyahegade/Downloads/task-dashboard/src/app/core/guards/auth.guard.ts"],"sourcesContent":["import { inject } from '@angular/core';\nimport { CanActivateFn, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\nexport const authGuard: CanActivateFn = (route, state) => {\n  const authService = inject(AuthService);\n  const router = inject(Router);\n\n  const currentUser = authService.currentUser();\n  if (!currentUser) {\n    router.navigate(['/login']);\n    return false;\n  }\n\n  // Role check\n  const allowedRoles = route.data?.['roles'] as string[] | undefined;\n  if (allowedRoles && !allowedRoles.includes(currentUser.role)) {\n    alert('Access denied: insufficient permissions.');\n    router.navigate(['/dashboard']);\n    return false;\n  }\n\n  return true;\n};\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAAwBC,MAAM,QAAQ,iBAAiB;AACvD,SAASC,WAAW,QAAQ,0BAA0B;AAEtD,OAAO,MAAMC,SAAS,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACvD,MAAMC,WAAW,GAAGN,MAAM,CAACE,WAAW,CAAC;EACvC,MAAMK,MAAM,GAAGP,MAAM,CAACC,MAAM,CAAC;EAE7B,MAAMO,WAAW,GAAGF,WAAW,CAACE,WAAW,EAAE;EAC7C,IAAI,CAACA,WAAW,EAAE;IAChBD,MAAM,CAACE,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC;IAC3B,OAAO,KAAK;EACd;EAEA;EACA,MAAMC,YAAY,GAAGN,KAAK,CAACO,IAAI,GAAG,OAAO,CAAyB;EAClE,IAAID,YAAY,IAAI,CAACA,YAAY,CAACE,QAAQ,CAACJ,WAAW,CAACK,IAAI,CAAC,EAAE;IAC5DC,KAAK,CAAC,0CAA0C,CAAC;IACjDP,MAAM,CAACE,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC;IAC/B,OAAO,KAAK;EACd;EAEA,OAAO,IAAI;AACb,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}