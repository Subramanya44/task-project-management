{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../core/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../../core/services/toast.service\";\nexport class RegisterComponent {\n  constructor(fb, auth, router, toast) {\n    this.fb = fb;\n    this.auth = auth;\n    this.router = router;\n    this.toast = toast;\n    this.f = this.fb.group({\n      name: [''],\n      email: [''],\n      password: ['']\n    });\n  }\n  submit() {\n    this.auth.register(this.f.value.name, this.f.value.email, this.f.value.password).subscribe(u => {\n      this.toast.push('Registered & logged in');\n      this.router.navigate(['/']);\n    });\n  }\n  static {\n    this.ɵfac = function RegisterComponent_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || RegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ToastService));\n    };\n  }\n  static {\n    this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: RegisterComponent,\n      selectors: [[\"app-register\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 13,\n      vars: 1,\n      consts: [[1, \"max-w-md\", \"mx-auto\", \"card\"], [1, \"text-xl\", \"font-bold\", \"mb-2\"], [3, \"ngSubmit\", \"formGroup\"], [1, \"mb-2\"], [\"formControlName\", \"name\", \"placeholder\", \"Name\", 1, \"w-full\", \"p-2\", \"border\", \"rounded\"], [\"formControlName\", \"email\", \"placeholder\", \"Email\", 1, \"w-full\", \"p-2\", \"border\", \"rounded\"], [\"formControlName\", \"password\", \"type\", \"password\", \"placeholder\", \"Password\", 1, \"w-full\", \"p-2\", \"border\", \"rounded\"], [1, \"px-4\", \"py-2\", \"bg-green-600\", \"text-white\", \"rounded\"]],\n      template: function RegisterComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h2\", 1);\n          i0.ɵɵtext(2, \"Register\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(3, \"form\", 2);\n          i0.ɵɵlistener(\"ngSubmit\", function RegisterComponent_Template_form_ngSubmit_3_listener() {\n            return ctx.submit();\n          });\n          i0.ɵɵelementStart(4, \"div\", 3);\n          i0.ɵɵelement(5, \"input\", 4);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(6, \"div\", 3);\n          i0.ɵɵelement(7, \"input\", 5);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(8, \"div\", 3);\n          i0.ɵɵelement(9, \"input\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(10, \"div\")(11, \"button\", 7);\n          i0.ɵɵtext(12, \"Register\");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"formGroup\", ctx.f);\n        }\n      },\n      dependencies: [CommonModule, ReactiveFormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, i1.FormGroupDirective, i1.FormControlName],\n      encapsulation: 2\n    });\n  }\n}","map":{"version":3,"names":["CommonModule","ReactiveFormsModule","RegisterComponent","constructor","fb","auth","router","toast","f","group","name","email","password","submit","register","value","subscribe","u","push","navigate","i0","ɵɵdirectiveInject","i1","FormBuilder","i2","AuthService","i3","Router","i4","ToastService","selectors","standalone","features","ɵɵStandaloneFeature","decls","vars","consts","template","RegisterComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵlistener","RegisterComponent_Template_form_ngSubmit_3_listener","ɵɵelement","ɵɵadvance","ɵɵproperty","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","encapsulation"],"sources":["/home/subramanyahegade/Downloads/task-dashboard/src/app/features/auth/register/register.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormBuilder, ReactiveFormsModule } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../../../core/services/auth.service';\nimport { ToastService } from '../../../core/services/toast.service';\n@Component({\n  selector: 'app-register',\n  standalone: true,\n  imports: [CommonModule, ReactiveFormsModule],\n  template: `\n    <div class=\"max-w-md mx-auto card\">\n      <h2 class=\"text-xl font-bold mb-2\">Register</h2>\n      <form [formGroup]=\"f\" (ngSubmit)=\"submit()\">\n        <div class=\"mb-2\"><input formControlName=\"name\" placeholder=\"Name\" class=\"w-full p-2 border rounded\" /></div>\n        <div class=\"mb-2\"><input formControlName=\"email\" placeholder=\"Email\" class=\"w-full p-2 border rounded\" /></div>\n        <div class=\"mb-2\"><input formControlName=\"password\" type=\"password\" placeholder=\"Password\" class=\"w-full p-2 border rounded\" /></div>\n        <div><button class=\"px-4 py-2 bg-green-600 text-white rounded\">Register</button></div>\n      </form>\n    </div>\n  `\n})\nexport class RegisterComponent {\n  f = this.fb.group({ name:[''], email:[''], password:[''] });\n  constructor(private fb: FormBuilder, private auth: AuthService, private router: Router, private toast: ToastService){}\n  submit(){\n    this.auth.register(this.f.value.name, this.f.value.email, this.f.value.password).subscribe(u => { this.toast.push('Registered & logged in'); this.router.navigate(['/']); });\n  }\n}\n"],"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAAsBC,mBAAmB,QAAQ,gBAAgB;;;;;;AAoBjE,OAAM,MAAOC,iBAAiB;EAE5BC,YAAoBC,EAAe,EAAUC,IAAiB,EAAUC,MAAc,EAAUC,KAAmB;IAA/F,KAAAH,EAAE,GAAFA,EAAE;IAAuB,KAAAC,IAAI,GAAJA,IAAI;IAAuB,KAAAC,MAAM,GAANA,MAAM;IAAkB,KAAAC,KAAK,GAALA,KAAK;IADrG,KAAAC,CAAC,GAAG,IAAI,CAACJ,EAAE,CAACK,KAAK,CAAC;MAAEC,IAAI,EAAC,CAAC,EAAE,CAAC;MAAEC,KAAK,EAAC,CAAC,EAAE,CAAC;MAAEC,QAAQ,EAAC,CAAC,EAAE;IAAC,CAAE,CAAC;EAC0D;EACrHC,MAAMA,CAAA;IACJ,IAAI,CAACR,IAAI,CAACS,QAAQ,CAAC,IAAI,CAACN,CAAC,CAACO,KAAK,CAACL,IAAI,EAAE,IAAI,CAACF,CAAC,CAACO,KAAK,CAACJ,KAAK,EAAE,IAAI,CAACH,CAAC,CAACO,KAAK,CAACH,QAAQ,CAAC,CAACI,SAAS,CAACC,CAAC,IAAG;MAAG,IAAI,CAACV,KAAK,CAACW,IAAI,CAAC,wBAAwB,CAAC;MAAE,IAAI,CAACZ,MAAM,CAACa,QAAQ,CAAC,CAAC,GAAG,CAAC,CAAC;IAAE,CAAC,CAAC;EAC9K;;;uCALWjB,iBAAiB,EAAAkB,EAAA,CAAAC,iBAAA,CAAAC,EAAA,CAAAC,WAAA,GAAAH,EAAA,CAAAC,iBAAA,CAAAG,EAAA,CAAAC,WAAA,GAAAL,EAAA,CAAAC,iBAAA,CAAAK,EAAA,CAAAC,MAAA,GAAAP,EAAA,CAAAC,iBAAA,CAAAO,EAAA,CAAAC,YAAA;IAAA;EAAA;;;YAAjB3B,iBAAiB;MAAA4B,SAAA;MAAAC,UAAA;MAAAC,QAAA,GAAAZ,EAAA,CAAAa,mBAAA;MAAAC,KAAA;MAAAC,IAAA;MAAAC,MAAA;MAAAC,QAAA,WAAAC,2BAAAC,EAAA,EAAAC,GAAA;QAAA,IAAAD,EAAA;UAVxBnB,EADF,CAAAqB,cAAA,aAAmC,YACE;UAAArB,EAAA,CAAAsB,MAAA,eAAQ;UAAAtB,EAAA,CAAAuB,YAAA,EAAK;UAChDvB,EAAA,CAAAqB,cAAA,cAA4C;UAAtBrB,EAAA,CAAAwB,UAAA,sBAAAC,oDAAA;YAAA,OAAYL,GAAA,CAAA3B,MAAA,EAAQ;UAAA,EAAC;UACzCO,EAAA,CAAAqB,cAAA,aAAkB;UAAArB,EAAA,CAAA0B,SAAA,eAAqF;UAAA1B,EAAA,CAAAuB,YAAA,EAAM;UAC7GvB,EAAA,CAAAqB,cAAA,aAAkB;UAAArB,EAAA,CAAA0B,SAAA,eAAuF;UAAA1B,EAAA,CAAAuB,YAAA,EAAM;UAC/GvB,EAAA,CAAAqB,cAAA,aAAkB;UAAArB,EAAA,CAAA0B,SAAA,eAA6G;UAAA1B,EAAA,CAAAuB,YAAA,EAAM;UAChIvB,EAAL,CAAAqB,cAAA,WAAK,iBAA0D;UAAArB,EAAA,CAAAsB,MAAA,gBAAQ;UAE3EtB,EAF2E,CAAAuB,YAAA,EAAS,EAAM,EACjF,EACH;;;UANEvB,EAAA,CAAA2B,SAAA,GAAe;UAAf3B,EAAA,CAAA4B,UAAA,cAAAR,GAAA,CAAAhC,CAAA,CAAe;;;qBAJfR,YAAY,EAAEC,mBAAmB,EAAAqB,EAAA,CAAA2B,aAAA,EAAA3B,EAAA,CAAA4B,oBAAA,EAAA5B,EAAA,CAAA6B,eAAA,EAAA7B,EAAA,CAAA8B,oBAAA,EAAA9B,EAAA,CAAA+B,kBAAA,EAAA/B,EAAA,CAAAgC,eAAA;MAAAC,aAAA;IAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}