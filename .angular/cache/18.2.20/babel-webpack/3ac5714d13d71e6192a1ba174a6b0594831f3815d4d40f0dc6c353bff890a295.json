{"ast":null,"code":"import { UnauthorizedComponent } from './features/misc/unauthorized.component';\nimport { authGuard } from './core/guards/auth.guard';\nexport const appRoutes = [{\n  path: 'dashboard',\n  loadComponent: () => import('./features/dashboard/dashboard.component').then(m => m.DashboardComponent),\n  canActivate: [authGuard],\n  data: {\n    roles: ['admin', 'user']\n  }\n}, {\n  path: 'projects',\n  loadComponent: () => import('./features/projects/projects.component').then(m => m.ProjectsComponent),\n  canActivate: [authGuard],\n  data: {\n    roles: ['admin']\n  }\n}, {\n  path: 'tasks',\n  loadChildren: () => import('./features/tasks/tasks.routes'),\n  canActivate: [authGuard],\n  data: {\n    roles: ['admin', 'user']\n  }\n}, {\n  path: 'auth',\n  loadChildren: () => import('./features/auth/auth.routes') // Login & Register pages\n}, {\n  path: '',\n  redirectTo: 'auth/login',\n  pathMatch: 'full'\n}, {\n  path: 'unauthorized',\n  component: UnauthorizedComponent\n}, {\n  path: '**',\n  redirectTo: ''\n}];","map":{"version":3,"names":["UnauthorizedComponent","authGuard","appRoutes","path","loadComponent","then","m","DashboardComponent","canActivate","data","roles","ProjectsComponent","loadChildren","redirectTo","pathMatch","component"],"sources":["/home/subramanyahegade/Downloads/task-dashboard/src/app/app.routes.ts"],"sourcesContent":["import { Routes } from '@angular/router';\nimport { UnauthorizedComponent } from './features/misc/unauthorized.component';\nimport { authGuard } from './core/guards/auth.guard';\n\nexport const appRoutes: Routes = [\n  {\n    path: 'dashboard',\n    loadComponent: () => import('./features/dashboard/dashboard.component').then(m => m.DashboardComponent),\n    canActivate: [authGuard],\n    data: { roles: ['admin', 'user'] }\n  },\n  {\n    path: 'projects',\n    loadComponent: () =>\n      import('./features/projects/projects.component').then(m => m.ProjectsComponent),\n    canActivate: [authGuard],\n    data: { roles: ['admin'] }\n  },    \n  {\n    path: 'tasks',\n    loadChildren: () => import('./features/tasks/tasks.routes'),\n    canActivate: [authGuard],\n    data: { roles: ['admin', 'user'] }\n  },\n  {\n    path: 'auth',\n    loadChildren: () => import('./features/auth/auth.routes') // Login & Register pages\n  },\n  { path: '', redirectTo: 'auth/login', pathMatch: 'full' }\n  \n  { path: 'unauthorized', component: UnauthorizedComponent },\n  { path: '**', redirectTo: '' }\n];"],"mappings":"AACA,SAASA,qBAAqB,QAAQ,wCAAwC;AAC9E,SAASC,SAAS,QAAQ,0BAA0B;AAEpD,OAAO,MAAMC,SAAS,GAAW,CAC/B;EACEC,IAAI,EAAE,WAAW;EACjBC,aAAa,EAAEA,CAAA,KAAM,MAAM,CAAC,0CAA0C,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,kBAAkB,CAAC;EACvGC,WAAW,EAAE,CAACP,SAAS,CAAC;EACxBQ,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO,EAAE,MAAM;EAAC;CACjC,EACD;EACEP,IAAI,EAAE,UAAU;EAChBC,aAAa,EAAEA,CAAA,KACb,MAAM,CAAC,wCAAwC,CAAC,CAACC,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACK,iBAAiB,CAAC;EACjFH,WAAW,EAAE,CAACP,SAAS,CAAC;EACxBQ,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO;EAAC;CACzB,EACD;EACEP,IAAI,EAAE,OAAO;EACbS,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,+BAA+B,CAAC;EAC3DJ,WAAW,EAAE,CAACP,SAAS,CAAC;EACxBQ,IAAI,EAAE;IAAEC,KAAK,EAAE,CAAC,OAAO,EAAE,MAAM;EAAC;CACjC,EACD;EACEP,IAAI,EAAE,MAAM;EACZS,YAAY,EAAEA,CAAA,KAAM,MAAM,CAAC,6BAA6B,CAAC,CAAC;CAC3D,EACD;EAAET,IAAI,EAAE,EAAE;EAAEU,UAAU,EAAE,YAAY;EAAEC,SAAS,EAAE;AAAM,CAAE,EAEzD;EAAEX,IAAI,EAAE,cAAc;EAAEY,SAAS,EAAEf;AAAqB,CAAE,EAC1D;EAAEG,IAAI,EAAE,IAAI;EAAEU,UAAU,EAAE;AAAE,CAAE,CAC/B","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}