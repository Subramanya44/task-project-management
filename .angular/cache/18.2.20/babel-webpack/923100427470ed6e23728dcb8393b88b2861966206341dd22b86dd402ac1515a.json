{"ast":null,"code":"import { signal } from '@angular/core';\nimport { of } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport class TaskService {\n  constructor() {\n    this._data = [{\n      id: 1,\n      projectId: 1,\n      title: 'Design UI',\n      status: 'todo'\n    }, {\n      id: 2,\n      projectId: 1,\n      title: 'API Integration',\n      status: 'inprogress'\n    }, {\n      id: 3,\n      projectId: 1,\n      title: 'Write tests',\n      status: 'done'\n    }, {\n      id: 4,\n      projectId: 2,\n      title: 'Set up DB',\n      status: 'todo'\n    }];\n    this.tasks = signal(this._data);\n  }\n  listByProject(projectId) {\n    return of(this.tasks().filter(t => t.projectId === projectId)).pipe(delay(200));\n  }\n  add(task) {\n    task.id = Date.now();\n    this._data.push(task);\n    this.tasks.set(this._data);\n    return of(task).pipe(delay(200));\n  }\n  update(id, patch) {\n    const idx = this._data.findIndex(t => t.id === id);\n    if (idx > -1) {\n      this._data[idx] = {\n        ...this._data[idx],\n        ...patch\n      };\n      this.tasks.set(this._data);\n    }\n    return of(this._data.find(t => t.id === id) || null).pipe(delay(200));\n  }\n  delete(id) {\n    this._data = this._data.filter(t => t.id !== id);\n    this.tasks.set(this._data);\n    return of(true).pipe(delay(200));\n  }\n  static {\n    this.ɵfac = function TaskService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || TaskService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: TaskService,\n      factory: TaskService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["signal","of","delay","TaskService","constructor","_data","id","projectId","title","status","tasks","listByProject","filter","t","pipe","add","task","Date","now","push","set","update","patch","idx","findIndex","find","delete","factory","ɵfac","providedIn"],"sources":["/home/subramanyahegade/Downloads/task-dashboard/src/app/core/services/task.service.ts"],"sourcesContent":["import { Injectable, signal } from '@angular/core';\nimport { of } from 'rxjs';\nimport { delay } from 'rxjs/operators';\nimport { Task } from '../models/task.model';\n\n@Injectable({providedIn:'root'})\nexport class TaskService {\n  private _data: Task[] = [\n    { id:1, projectId:1, title:'Design UI', status:'todo' },\n    { id:2, projectId:1, title:'API Integration', status:'inprogress' },\n    { id:3, projectId:1, title:'Write tests', status:'done' },\n    { id:4, projectId:2, title:'Set up DB', status:'todo' }\n  ];\n  public tasks = signal<Task[]>(this._data);\n  listByProject(projectId:number){ return of(this.tasks().filter(t=>t.projectId===projectId)).pipe(delay(200)); }\n  add(task: Task){ task.id = Date.now(); this._data.push(task); this.tasks.set(this._data); return of(task).pipe(delay(200)); }\n  update(id:number, patch: Partial<Task>){ const idx=this._data.findIndex(t=>t.id===id); if(idx>-1){ this._data[idx] = {...this._data[idx], ...patch}; this.tasks.set(this._data);} return of(this._data.find(t=>t.id===id)||null).pipe(delay(200)); }\n  delete(id:number){ this._data = this._data.filter(t=>t.id!==id); this.tasks.set(this._data); return of(true).pipe(delay(200)); }\n}\n"],"mappings":"AAAA,SAAqBA,MAAM,QAAQ,eAAe;AAClD,SAASC,EAAE,QAAQ,MAAM;AACzB,SAASC,KAAK,QAAQ,gBAAgB;;AAItC,OAAM,MAAOC,WAAW;EADxBC,YAAA;IAEU,KAAAC,KAAK,GAAW,CACtB;MAAEC,EAAE,EAAC,CAAC;MAAEC,SAAS,EAAC,CAAC;MAAEC,KAAK,EAAC,WAAW;MAAEC,MAAM,EAAC;IAAM,CAAE,EACvD;MAAEH,EAAE,EAAC,CAAC;MAAEC,SAAS,EAAC,CAAC;MAAEC,KAAK,EAAC,iBAAiB;MAAEC,MAAM,EAAC;IAAY,CAAE,EACnE;MAAEH,EAAE,EAAC,CAAC;MAAEC,SAAS,EAAC,CAAC;MAAEC,KAAK,EAAC,aAAa;MAAEC,MAAM,EAAC;IAAM,CAAE,EACzD;MAAEH,EAAE,EAAC,CAAC;MAAEC,SAAS,EAAC,CAAC;MAAEC,KAAK,EAAC,WAAW;MAAEC,MAAM,EAAC;IAAM,CAAE,CACxD;IACM,KAAAC,KAAK,GAAGV,MAAM,CAAS,IAAI,CAACK,KAAK,CAAC;;EACzCM,aAAaA,CAACJ,SAAgB;IAAG,OAAON,EAAE,CAAC,IAAI,CAACS,KAAK,EAAE,CAACE,MAAM,CAACC,CAAC,IAAEA,CAAC,CAACN,SAAS,KAAGA,SAAS,CAAC,CAAC,CAACO,IAAI,CAACZ,KAAK,CAAC,GAAG,CAAC,CAAC;EAAE;EAC9Ga,GAAGA,CAACC,IAAU;IAAGA,IAAI,CAACV,EAAE,GAAGW,IAAI,CAACC,GAAG,EAAE;IAAE,IAAI,CAACb,KAAK,CAACc,IAAI,CAACH,IAAI,CAAC;IAAE,IAAI,CAACN,KAAK,CAACU,GAAG,CAAC,IAAI,CAACf,KAAK,CAAC;IAAE,OAAOJ,EAAE,CAACe,IAAI,CAAC,CAACF,IAAI,CAACZ,KAAK,CAAC,GAAG,CAAC,CAAC;EAAE;EAC5HmB,MAAMA,CAACf,EAAS,EAAEgB,KAAoB;IAAG,MAAMC,GAAG,GAAC,IAAI,CAAClB,KAAK,CAACmB,SAAS,CAACX,CAAC,IAAEA,CAAC,CAACP,EAAE,KAAGA,EAAE,CAAC;IAAE,IAAGiB,GAAG,GAAC,CAAC,CAAC,EAAC;MAAE,IAAI,CAAClB,KAAK,CAACkB,GAAG,CAAC,GAAG;QAAC,GAAG,IAAI,CAAClB,KAAK,CAACkB,GAAG,CAAC;QAAE,GAAGD;MAAK,CAAC;MAAE,IAAI,CAACZ,KAAK,CAACU,GAAG,CAAC,IAAI,CAACf,KAAK,CAAC;IAAC;IAAE,OAAOJ,EAAE,CAAC,IAAI,CAACI,KAAK,CAACoB,IAAI,CAACZ,CAAC,IAAEA,CAAC,CAACP,EAAE,KAAGA,EAAE,CAAC,IAAE,IAAI,CAAC,CAACQ,IAAI,CAACZ,KAAK,CAAC,GAAG,CAAC,CAAC;EAAE;EACnPwB,MAAMA,CAACpB,EAAS;IAAG,IAAI,CAACD,KAAK,GAAG,IAAI,CAACA,KAAK,CAACO,MAAM,CAACC,CAAC,IAAEA,CAAC,CAACP,EAAE,KAAGA,EAAE,CAAC;IAAE,IAAI,CAACI,KAAK,CAACU,GAAG,CAAC,IAAI,CAACf,KAAK,CAAC;IAAE,OAAOJ,EAAE,CAAC,IAAI,CAAC,CAACa,IAAI,CAACZ,KAAK,CAAC,GAAG,CAAC,CAAC;EAAE;;;uCAXpHC,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAAwB,OAAA,EAAXxB,WAAW,CAAAyB,IAAA;MAAAC,UAAA,EADA;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}