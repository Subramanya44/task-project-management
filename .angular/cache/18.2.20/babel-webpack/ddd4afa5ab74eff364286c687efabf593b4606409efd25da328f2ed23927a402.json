{"ast":null,"code":"import { inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\nexport const authGuard = (route, state) => {\n  const auth = inject(AuthService);\n  const router = inject(Router);\n  const user = auth.currentUser();\n  const roles = route.data && route.data['roles'];\n  if (user && (!roles || roles.includes(user.role))) return true;\n  router.navigate(['/auth/login']);\n  return false;\n};","map":{"version":3,"names":["inject","Router","AuthService","authGuard","route","state","auth","router","user","currentUser","roles","data","includes","role","navigate"],"sources":["/home/subramanyahegade/Downloads/task-dashboard/src/app/core/guards/auth.guard.ts"],"sourcesContent":["import { inject } from '@angular/core';\nimport { CanActivateFn, Router } from '@angular/router';\nimport { AuthService } from '../services/auth.service';\n\nexport const authGuard: CanActivateFn = (route, state) => {\n  const auth = inject(AuthService);\n  const router = inject(Router);\n  const user = auth.currentUser();\n  const roles = route.data && (route.data['roles'] as string[]);\n  if(user && (!roles || roles.includes(user.role))) return true;\n  router.navigate(['/auth/login']);\n  return false;\n};\n"],"mappings":"AAAA,SAASA,MAAM,QAAQ,eAAe;AACtC,SAAwBC,MAAM,QAAQ,iBAAiB;AACvD,SAASC,WAAW,QAAQ,0BAA0B;AAEtD,OAAO,MAAMC,SAAS,GAAkBA,CAACC,KAAK,EAAEC,KAAK,KAAI;EACvD,MAAMC,IAAI,GAAGN,MAAM,CAACE,WAAW,CAAC;EAChC,MAAMK,MAAM,GAAGP,MAAM,CAACC,MAAM,CAAC;EAC7B,MAAMO,IAAI,GAAGF,IAAI,CAACG,WAAW,EAAE;EAC/B,MAAMC,KAAK,GAAGN,KAAK,CAACO,IAAI,IAAKP,KAAK,CAACO,IAAI,CAAC,OAAO,CAAc;EAC7D,IAAGH,IAAI,KAAK,CAACE,KAAK,IAAIA,KAAK,CAACE,QAAQ,CAACJ,IAAI,CAACK,IAAI,CAAC,CAAC,EAAE,OAAO,IAAI;EAC7DN,MAAM,CAACO,QAAQ,CAAC,CAAC,aAAa,CAAC,CAAC;EAChC,OAAO,KAAK;AACd,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}