{"ast":null,"code":"import { signal } from '@angular/core';\nimport { of } from 'rxjs';\nimport { delay, tap } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nexport class AuthService {\n  constructor() {\n    this.users = [{\n      id: 1,\n      name: 'Admin',\n      email: 'admin@example.com',\n      password: 'admin123',\n      role: 'admin',\n      token: 'admintoken'\n    }, {\n      id: 2,\n      name: 'User',\n      email: 'user@example.com',\n      password: 'user123',\n      role: 'user',\n      token: 'usertoken'\n    }];\n    this.currentUser = signal(this._load());\n  }\n  _load() {\n    const raw = localStorage.getItem('currentUser');\n    return raw ? JSON.parse(raw) : null;\n  }\n  _save(user) {\n    this.currentUser.set(user);\n    if (user) localStorage.setItem('currentUser', JSON.stringify(user));else localStorage.removeItem('currentUser');\n  }\n  login(email, password) {\n    // check email + password\n    const user = this.users.find(u => u.email === email && u.password === password);\n    return of(user || null).pipe(delay(400), tap(u => {\n      if (u) this._save(u);\n    }));\n  }\n  register(name, email, password) {\n    const id = Date.now();\n    const user = {\n      id,\n      name,\n      email,\n      password,\n      role: 'user',\n      token: 'token' + id\n    };\n    this.users.push(user);\n    return of(user).pipe(delay(400), tap(u => this._save(u)));\n  }\n  logout() {\n    this._save(null);\n  }\n  static {\n    this.ɵfac = function AuthService_Factory(__ngFactoryType__) {\n      return new (__ngFactoryType__ || AuthService)();\n    };\n  }\n  static {\n    this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n      token: AuthService,\n      factory: AuthService.ɵfac,\n      providedIn: 'root'\n    });\n  }\n}","map":{"version":3,"names":["signal","of","delay","tap","AuthService","constructor","users","id","name","email","password","role","token","currentUser","_load","raw","localStorage","getItem","JSON","parse","_save","user","set","setItem","stringify","removeItem","login","find","u","pipe","register","Date","now","push","logout","factory","ɵfac","providedIn"],"sources":["/home/subramanyahegade/Downloads/task-dashboard/src/app/core/services/auth.service.ts"],"sourcesContent":["import { Injectable, signal } from '@angular/core';\nimport { of } from 'rxjs';\nimport { delay, tap } from 'rxjs/operators';\nimport { User } from '../models/user.model';\n\n@Injectable({ providedIn: 'root' })\nexport class AuthService {\n  private users: User[] = [\n    { id: 1, name: 'Admin', email: 'admin@example.com', password: 'admin123', role: 'admin', token: 'admintoken' },\n    { id: 2, name: 'User', email: 'user@example.com', password: 'user123', role: 'user', token: 'usertoken' }\n  ];\n\n  public currentUser = signal<User | null>(this._load());\n\n  private _load(): User | null {\n    const raw = localStorage.getItem('currentUser');\n    return raw ? JSON.parse(raw) : null;\n  }\n\n  private _save(user: User | null) {\n    this.currentUser.set(user);\n    if (user) localStorage.setItem('currentUser', JSON.stringify(user));\n    else localStorage.removeItem('currentUser');\n  }\n\n  login(email: string, password: string) {\n    // check email + password\n    const user = this.users.find(u => u.email === email && u.password === password);\n    return of(user || null).pipe(\n      delay(400),\n      tap(u => {\n        if (u) this._save(u);\n      })\n    );\n  }\n\n  register(name: string, email: string, password: string) {\n    const id = Date.now();\n    const user: User = { id, name, email, password, role: 'user', token: 'token' + id };\n    this.users.push(user);\n    return of(user).pipe(delay(400), tap(u => this._save(u)));\n  }\n\n  logout() { this._save(null); }\n}\n"],"mappings":"AAAA,SAAqBA,MAAM,QAAQ,eAAe;AAClD,SAASC,EAAE,QAAQ,MAAM;AACzB,SAASC,KAAK,EAAEC,GAAG,QAAQ,gBAAgB;;AAI3C,OAAM,MAAOC,WAAW;EADxBC,YAAA;IAEU,KAAAC,KAAK,GAAW,CACtB;MAAEC,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE,mBAAmB;MAAEC,QAAQ,EAAE,UAAU;MAAEC,IAAI,EAAE,OAAO;MAAEC,KAAK,EAAE;IAAY,CAAE,EAC9G;MAAEL,EAAE,EAAE,CAAC;MAAEC,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE,kBAAkB;MAAEC,QAAQ,EAAE,SAAS;MAAEC,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAW,CAAE,CAC1G;IAEM,KAAAC,WAAW,GAAGb,MAAM,CAAc,IAAI,CAACc,KAAK,EAAE,CAAC;;EAE9CA,KAAKA,CAAA;IACX,MAAMC,GAAG,GAAGC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IAC/C,OAAOF,GAAG,GAAGG,IAAI,CAACC,KAAK,CAACJ,GAAG,CAAC,GAAG,IAAI;EACrC;EAEQK,KAAKA,CAACC,IAAiB;IAC7B,IAAI,CAACR,WAAW,CAACS,GAAG,CAACD,IAAI,CAAC;IAC1B,IAAIA,IAAI,EAAEL,YAAY,CAACO,OAAO,CAAC,aAAa,EAAEL,IAAI,CAACM,SAAS,CAACH,IAAI,CAAC,CAAC,CAAC,KAC/DL,YAAY,CAACS,UAAU,CAAC,aAAa,CAAC;EAC7C;EAEAC,KAAKA,CAACjB,KAAa,EAAEC,QAAgB;IACnC;IACA,MAAMW,IAAI,GAAG,IAAI,CAACf,KAAK,CAACqB,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACnB,KAAK,KAAKA,KAAK,IAAImB,CAAC,CAAClB,QAAQ,KAAKA,QAAQ,CAAC;IAC/E,OAAOT,EAAE,CAACoB,IAAI,IAAI,IAAI,CAAC,CAACQ,IAAI,CAC1B3B,KAAK,CAAC,GAAG,CAAC,EACVC,GAAG,CAACyB,CAAC,IAAG;MACN,IAAIA,CAAC,EAAE,IAAI,CAACR,KAAK,CAACQ,CAAC,CAAC;IACtB,CAAC,CAAC,CACH;EACH;EAEAE,QAAQA,CAACtB,IAAY,EAAEC,KAAa,EAAEC,QAAgB;IACpD,MAAMH,EAAE,GAAGwB,IAAI,CAACC,GAAG,EAAE;IACrB,MAAMX,IAAI,GAAS;MAAEd,EAAE;MAAEC,IAAI;MAAEC,KAAK;MAAEC,QAAQ;MAAEC,IAAI,EAAE,MAAM;MAAEC,KAAK,EAAE,OAAO,GAAGL;IAAE,CAAE;IACnF,IAAI,CAACD,KAAK,CAAC2B,IAAI,CAACZ,IAAI,CAAC;IACrB,OAAOpB,EAAE,CAACoB,IAAI,CAAC,CAACQ,IAAI,CAAC3B,KAAK,CAAC,GAAG,CAAC,EAAEC,GAAG,CAACyB,CAAC,IAAI,IAAI,CAACR,KAAK,CAACQ,CAAC,CAAC,CAAC,CAAC;EAC3D;EAEAM,MAAMA,CAAA;IAAK,IAAI,CAACd,KAAK,CAAC,IAAI,CAAC;EAAE;;;uCArClBhB,WAAW;IAAA;EAAA;;;aAAXA,WAAW;MAAA+B,OAAA,EAAX/B,WAAW,CAAAgC,IAAA;MAAAC,UAAA,EADE;IAAM;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}